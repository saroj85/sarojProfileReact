{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nlet dataobj = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItem = event.target.checked; //  \n\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n        allChecked = isCheckedItem;\n\n        if (itemName === \"selectAll\") {\n          if (allChecked === true) {\n            console.log(allChecked); //fruites =  fruites.map(item => (...item, isChecked:true));\n\n            fruits = fruits.map(itm => _objectSpread({}, itm, {\n              isChecked: true\n            }));\n          } else {\n            fruits = fruits.map(itm => _objectSpread({}, itm, {\n              isChecked: false\n            }));\n            console.log(allChecked);\n          }\n        } else {}\n\n        return {\n          fruits,\n          allChecked\n        };\n      }); //     allChecked = isCheckedItem;\n      //     if(allChecked===true){\n      //     fruites.filter(fruites =>fruites.isChecked = event.target.checked);\n      //     for(let i=0;i<fruites.length;i++){\n      //         dataobj.push({\"id\":fruites[i].value});\n      //     }\n      //     console.log(\"obj\",dataobj)\n      //     this.setState({fruits : fruites},()=>{\n      //         console.log(\"all\",this.state.fruits)\n      //     });\n      // }\n      // else{\n      //     dataobj=[];\n      // }\n      // }\n      // else{\n      //     let fruites = this.state.fruits;\n      //     fruites.filter((fruit)=>{\n      //         if(fruit.value === event.target.value)\n      //             fruit.isChecked = event.target.checked\n      //         this.setState({\n      //             fruits : fruites\n      //         })\n      //     })\n      // }\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  } // item\n  // all\n\n\n  render() {\n    const fruits = this.state.fruits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        key: fruit.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","dataobj","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","setState","prevState","fruits","allChecked","console","log","map","itm","isChecked","state","id","render","length","fruit","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nlet dataobj = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 12, value: 'guva', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'banana', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n\n            allChecked:false,\n            \n        }\n    \n    }\n\n    // item\n\n\n    // all\n    handleAllChecked=(event)=>{\n\n        let itemName = event.target.value;\n        let isCheckedItem = event.target.checked;\n\n     //  \n\n        this.setState(prevState => {\n            let {fruits, allChecked} = prevState;\n           \n            allChecked = isCheckedItem;\n            if(itemName===\"selectAll\"){\n            if(allChecked===true){\n                console.log(allChecked);\n              //fruites =  fruites.map(item => (...item, isChecked:true));\n              fruits=  fruits.map(itm => ({...itm, isChecked:true}))\n\n            }\n            else{\n                fruits=  fruits.map(itm => ({...itm, isChecked:false}))\n\n                console.log(allChecked)\n            }\n        }\n        else{\n\n        }\n      \n\n\n       return {fruits, allChecked}\n })\n\n    //     allChecked = isCheckedItem;\n    //     if(allChecked===true){\n    //     fruites.filter(fruites =>fruites.isChecked = event.target.checked);\n    //     for(let i=0;i<fruites.length;i++){\n    //         dataobj.push({\"id\":fruites[i].value});\n    //     }\n    //     console.log(\"obj\",dataobj)\n    //     this.setState({fruits : fruites},()=>{\n    //         console.log(\"all\",this.state.fruits)\n    //     });\n    // }\n    // else{\n    //     dataobj=[];\n    // }\n        \n    // }\n    // else{\n    //     let fruites = this.state.fruits;\n    //     fruites.filter((fruit)=>{\n    //         if(fruit.value === event.target.value)\n    //             fruit.isChecked = event.target.checked\n    //         this.setState({\n    //             fruits : fruites\n    //         })\n\n    //     })\n    // }\n        \n    }\n  \n\n\n\n    render() {\n        const { fruits } = this.state;\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n                    return (\n                        <div key={fruit.id} >\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                            {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}