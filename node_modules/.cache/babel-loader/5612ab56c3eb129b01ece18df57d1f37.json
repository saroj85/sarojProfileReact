{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value; //get target event value in let\n\n      let isCheckedItem = event.target.checked; //get chacked event value in let\n\n      let index = event.target.id;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked,\n            selectedValue = prevState.selectedValue;\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem;\n\n          if (allChecked === true) {\n            fruits = fruits.map((item, index) => {\n              return _objectSpread({}, item, {\n                isChecked: true\n              });\n            });\n          } else {\n            fruits = fruits.map((item, index) => {\n              return _objectSpread({}, item, {\n                isChecked: false\n              });\n            });\n          }\n        } else {\n          fruits = fruits.map((item, index) => {\n            if (item.id === index) {\n              console.log(\"true\");\n            }\n          });\n        }\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false,\n      selectedValue: []\n    };\n  }\n\n  render() {\n    console.log(\"State\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Select All\"), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: index,\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","index","id","setState","prevState","fruits","allChecked","selectedValue","map","item","isChecked","console","log","state","render","length","fruit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n            selectedValue: [],\n        }\n    }\n\n    handleAllChecked = (event) => {\n        let itemName = event.target.value; //get target event value in let\n        let isCheckedItem = event.target.checked; //get chacked event value in let\n        let index = event.target.id\n\n\n        this.setState(prevState =>{\n            let {fruits, allChecked, selectedValue} = prevState;\n            if(itemName == \"selectAll\"){\n                allChecked = isCheckedItem;\n                if(allChecked === true ){\n                    fruits = fruits.map((item,index)=>{\n                        return{...item,isChecked : true};\n                    })\n                }\n                else{\n                    fruits = fruits.map((item,index)=>{\n                        return{...item,isChecked: false};\n                    })\n                }\n            }\n            else{\n                fruits = fruits.map((item,index)=>{\n                    if(item.id === index){\n                        console.log(\"true\")\n\n                    }\n                })\n\n            }\n            return {fruits, allChecked}\n        })\n    }\n\n\n    render() {\n        console.log(\"State\", this.state);\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                {/* <hr></hr> */}\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n                    return (\n                        <div>\n                            <input\n                                id={index}\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                            {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}