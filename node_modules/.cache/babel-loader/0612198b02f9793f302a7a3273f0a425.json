{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      const itemName = event.target.value;\n      const isCheckedItem = event.target.checked;\n      const itemId = event.target.id;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem;\n\n          if (allChecked === true) {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: true\n            }));\n          } else {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: false\n            }));\n          }\n        }\n\n        console.log(this.state);\n        console.log(\"hey\", objectChecked);\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"select items \", objectChecked.length, \" && select All \", React.createElement(\"span\", {\n      style: {\n        fontSize: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.allChecked ? \"True\" : \"False\"))), React.createElement(Checkbox, {\n      type: \"checkbox\",\n      defaultValue: \"selectAll\",\n      label: \"Select All\",\n      checked: this.state.allChecked,\n      onChange: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Checkbox // key={fruits.id}\n      , {\n        type: \"checkbox\",\n        id: fruits.id,\n        label: fruits.value,\n        defaultValue: fruits.value,\n        checked: fruits.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","Checkbox","objectChecked","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","itemId","id","setState","prevState","fruits","allChecked","map","item","isChecked","console","log","state","render","length","fontSize","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,IAAIC,aAAa,GAAG,EAApB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,gBArBmB,GAqBCC,KAAD,IAAU;AACzB,YAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACE,MAAN,CAAaG,OAAnC;AACA,YAAMC,MAAM,GAAGN,KAAK,CAACE,MAAN,CAAaK,EAA5B;AAEA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AAAA,YAClBC,MADkB,GACGD,SADH,CAClBC,MADkB;AAAA,YACXC,UADW,GACGF,SADH,CACXE,UADW;;AAGvB,YAAGV,QAAQ,IAAI,WAAf,EAA2B;AACvBU,UAAAA,UAAU,GAAGP,aAAb;;AACA,cAAGO,UAAU,KAAK,IAAlB,EAAuB;AACnBD,YAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAYC,IAAD,sBAAaA,IAAb;AAAkBC,cAAAA,SAAS,EAAG;AAA9B,cAAX,CAAT;AAEH,WAHD,MAII;AACAJ,YAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAYC,IAAD,sBAAaA,IAAb;AAAkBC,cAAAA,SAAS,EAAG;AAA9B,cAAX,CAAT;AACH;AAGJ;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBrB,aAAlB;AAGA,eAAO;AAACe,UAAAA,MAAD;AAASC,UAAAA;AAAT,SAAP;AACH,OApBD;AAwBH,KAlDkB;;AAEf,SAAKM,KAAL,GAAa;AACTP,MAAAA,MAAM,EAAE,CACJ;AAAEH,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,OAAhB;AAAyBW,QAAAA,SAAS,EAAE;AAApC,OADI,EAEJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,QAAhB;AAA0BW,QAAAA,SAAS,EAAE;AAArC,OAFI,EAGJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,OAAhB;AAAyBW,QAAAA,SAAS,EAAE;AAApC,OAHI,EAIJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,QAAhB;AAA0BW,QAAAA,SAAS,EAAE;AAArC,OAJI,EAKJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,MAAhB;AAAwBW,QAAAA,SAAS,EAAE;AAAnC,OALI,EAMJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,WAAhB;AAA6BW,QAAAA,SAAS,EAAE;AAAxC,OANI,EAOJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,YAAhB;AAA8BW,QAAAA,SAAS,EAAE;AAAzC,OAPI,EAQJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,MAAhB;AAAwBW,QAAAA,SAAS,EAAE;AAAnC,OARI,EASJ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,KAAK,EAAE,QAAhB;AAA0BW,QAAAA,SAAS,EAAE;AAArC,OATI,EAUJ;AAAEP,QAAAA,EAAE,EAAE,EAAN;AAAUJ,QAAAA,KAAK,EAAE,OAAjB;AAA0BW,QAAAA,SAAS,EAAE;AAArC,OAVI,EAWJ;AAAEP,QAAAA,EAAE,EAAE,EAAN;AAAUJ,QAAAA,KAAK,EAAE,OAAjB;AAA0BW,QAAAA,SAAS,EAAE;AAArC,OAXI,CADC;AAcTH,MAAAA,UAAU,EAAE;AAdH,KAAb;AAgBH;;AAqCDO,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBvB,aAAa,CAACwB,MAAhC,qBAAsD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKH,KAAL,CAAWN,UAAX,GAAwB,MAAxB,GAAiC,OAApE,CAAtD,CADH,CADJ,EAII,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,YAAY,EAAC,WAAvC;AAAmD,MAAA,KAAK,EAAC,YAAzD;AAAsE,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWN,UAA1F;AAAsG,MAAA,QAAQ,EAAE,KAAKZ,gBAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKK,KAAKkB,KAAL,CAAWP,MAAX,IAAqB,KAAKO,KAAL,CAAWP,MAAX,CAAkBS,MAAlB,GAA2B,CAAhD,IAAqD,KAAKF,KAAL,CAAWP,MAAX,CAAkBE,GAAlB,CAAsB,CAACF,MAAD,EAASW,KAAT,KAAmB;AAC3F,aACG;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,QAAD,CACA;AADA;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,EAAE,EAAEX,MAAM,CAACH,EAHX;AAIA,QAAA,KAAK,EAAEG,MAAM,CAACP,KAJd;AAKA,QAAA,YAAY,EAAEO,MAAM,CAACP,KALrB;AAMA,QAAA,OAAO,EAAEO,MAAM,CAACI,SANhB;AAOA,QAAA,QAAQ,EAAE,KAAKf,gBAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CADH;AAaH,KAdqD,CAL1D,CADJ;AAwBH;;AAlF4B;;AAqFjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n\n    handleAllChecked = (event) =>{\n        const itemName = event.target.value;\n        const isCheckedItem = event.target.checked;\n        const itemId = event.target.id;\n\n        this.setState(prevState => {\n            let {fruits,allChecked} = prevState;\n            \n            if(itemName == \"selectAll\"){\n                allChecked = isCheckedItem;\n                if(allChecked === true){\n                    fruits = fruits.map((item)=>({...item,isChecked : true}))\n                    \n                }\n                else{\n                    fruits = fruits.map((item)=>({...item,isChecked : false}))\n                }\n                   \n                \n            }\n            console.log(this.state)\n            console.log(\"hey\",objectChecked)\n\n\n            return {fruits, allChecked}\n        })\n        \n\n\n    }\n\n    \n\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                   <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? \"True\" : \"False\"}</span></h2>\n                </div>\n                <Checkbox type=\"checkbox\" defaultValue=\"selectAll\" label=\"Select All\" checked={this.state.allChecked} onChange={this.handleAllChecked} />\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                       <div key={index}>\n                            <Checkbox\n                            // key={fruits.id}\n                            type=\"checkbox\"\n                            id={fruits.id}\n                            label={fruits.value}\n                            defaultValue={fruits.value}\n                            checked={fruits.isChecked}\n                            onChange={this.handleAllChecked}\n                        />\n                       </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}