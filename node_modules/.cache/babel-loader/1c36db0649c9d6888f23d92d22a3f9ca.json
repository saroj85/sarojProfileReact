{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nlet dataobj = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItems = event.target.checked;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n        allChecked = isCheckedItems;\n\n        if (itemName === \"selectAll\") {\n          if (allChecked === true) {\n            console.log(allChecked);\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: true\n            }));\n          } else {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: false\n            }));\n            console.log(allChecked);\n          }\n        } else if (itemName === fruits.value) {\n          fruit.isCheckedItems === true;\n        }\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    const fruits = this.state.fruits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        key: fruit.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onClick: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","dataobj","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItems","checked","setState","prevState","fruits","allChecked","console","log","map","item","isChecked","fruit","state","id","render","length","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nlet dataobj = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 12, value: 'guva', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'banana', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n    handleAllChecked = (event) =>{\n        let itemName = event.target.value;\n        let isCheckedItems = event.target.checked;\n        this.setState(prevState  => {\n            let { fruits, allChecked} = prevState;\n            allChecked = isCheckedItems;\n            if(itemName === \"selectAll\"){\n                if(allChecked === true){\n                    console.log(allChecked);\n                    fruits = fruits.map(item => ({...item, isChecked: true}))\n                }\n                else{\n                    fruits = fruits.map((item) => ({...item, isChecked : false}))\n                    console.log(allChecked);\n                }\n            }\n            else if(itemName === fruits.value){\n                fruit.isCheckedItems === true;\n\n\n            }\n\n            return {fruits , allChecked}\n\n        })\n    }\n\n\n\n\n    render() {\n        const { fruits } = this.state;\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n                    return (\n                        <div key={fruit.id} >\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onClick={this.handleAllChecked} />\n                            {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}