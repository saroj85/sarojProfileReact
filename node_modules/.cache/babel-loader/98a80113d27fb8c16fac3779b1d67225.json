{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItem = event.target.checked;\n      let itemIndex = event.target.id;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem;\n          fruits = fruits.map(item => _objectSpread({}, item, {\n            isChecked: true\n          }));\n          console.log(\"fruits\", fruits);\n        } else {\n          console.log(\"not\");\n        }\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"select items \", objectChecked.length, \" && select All \", React.createElement(\"span\", {\n      style: {\n        fontSize: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.allChecked ? \"True\" : \"False\"))), React.createElement(Checkbox, {\n      value: \"selectAll\",\n      label: \"Select All\",\n      checked: this.state.allChecked,\n      onChange: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return (// <Checkbox\n        //     key={index}\n        //     id={fruits.id}\n        //     label={fruits.value}\n        //     value={fruits.value}\n        //     checked={fruits.isChecked}\n        //     onChange={this.handleAllChecked}\n        // />\n        React.createElement(\"input\", {\n          type: \"checkbox\",\n          key: index,\n          id: fruits.id,\n          label: fruits.value,\n          value: fruits.value,\n          checked: fruits.isChecked,\n          onChange: this.handleAllChecked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })\n      );\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","Checkbox","objectChecked","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","itemIndex","id","setState","prevState","fruits","allChecked","map","item","isChecked","console","log","state","render","length","fontSize","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n    handleAllChecked = (event) =>{\n        let itemName = event.target.value;\n        let isCheckedItem = event.target.checked;\n        let itemIndex = event.target.id;\n        \n        this.setState( prevState => {\n            let {fruits, allChecked} = prevState;\n           \n            if(itemName == \"selectAll\"){\n                allChecked = isCheckedItem;\n\n                fruits = fruits.map((item) =>({...item, isChecked : true}));\n\n                console.log(\"fruits\",fruits)\n            }\n            else{\n                console.log(\"not\");\n            }\n\n        });\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                   <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? \"True\" : \"False\"}</span></h2>\n                </div>\n                <Checkbox value=\"selectAll\" label=\"Select All\" checked={this.state.allChecked} onChange={this.handleAllChecked} />\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                        // <Checkbox\n                        //     key={index}\n                        //     id={fruits.id}\n                        //     label={fruits.value}\n                        //     value={fruits.value}\n                        //     checked={fruits.isChecked}\n                        //     onChange={this.handleAllChecked}\n                        // />\n                        <input \n                            type=\"checkbox\"\n                            key={index}\n                            id={fruits.id}\n                            label={fruits.value}\n                            value={fruits.value}\n                            checked={fruits.isChecked}\n                            onChange={this.handleAllChecked}\n                        />\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}