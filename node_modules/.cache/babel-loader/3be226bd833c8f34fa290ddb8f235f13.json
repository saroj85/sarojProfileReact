{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItem = event.target.checked;\n      let itemIndex = event.target.id;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem;\n        } else {}\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"select items \", objectChecked.length, \" && select All \", React.createElement(\"span\", {\n      style: {\n        fontSize: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.allChecked ? \"True\" : \"False\"))), React.createElement(Checkbox, {\n      value: \"selectAll\",\n      label: \"Select All\",\n      checked: this.state.allChecked,\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return React.createElement(Checkbox, {\n        key: index,\n        id: fruits.id,\n        label: fruits.value,\n        value: fruits.value,\n        checked: fruits.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","Checkbox","objectChecked","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","itemIndex","id","setState","prevState","fruits","allChecked","state","isChecked","render","length","fontSize","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n    handleAllChecked=(event) =>{\n        let itemName = event.target.value;\n        let isCheckedItem = event.target.checked;\n        let itemIndex = event.target.id;\n        \n        this.setState(prevState => {\n            let { fruits, allChecked } = prevState;\n            if (itemName == \"selectAll\") {\n                allChecked = isCheckedItem;\n            }\n            else{\n                \n            }\n\n        })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                   <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? \"True\" : \"False\"}</span></h2>\n                </div>\n                <Checkbox value=\"selectAll\" label=\"Select All\" checked={this.state.allChecked} onClick={this.handleAllChecked} />\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                        <Checkbox\n                            key={index}\n                            id={fruits.id}\n                            label={fruits.value}\n                            value={fruits.value}\n                            checked={fruits.isChecked}\n                            onChange={this.handleAllChecked}\n                        />\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}