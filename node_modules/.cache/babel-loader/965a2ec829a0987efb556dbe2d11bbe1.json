{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value; //get target event value in let\n\n      let isCheckedItem = event.target.checked; //get chacked event value in let\n\n      let itemIndex = event.target.id; //get chacked event id in itemIndex\n\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem; // fruits = fruits.map((item) => ({ ...item, isChecked: true }))\n          // if (allChecked === true) {\n          //     objectChecked = [];\n          //     for (let i = 0; i < fruits.length; i++) {\n          //         objectChecked.push({ \"id\": fruits[i].id })\n          //     }\n          // }\n          // else {\n          //     fruits = fruits.map((item) => ({ ...item, isChecked: false }));\n          //     objectChecked = [];\n          // }\n          // console.log(\"id to show\", objectChecked);\n        } // single elemnt\n        else {\n            fruits.map((items, index) => {\n              if (items.id === parseInt(itemIndex)) {\n                items.isChecked = isCheckedItem;\n\n                if (fruits[index].isChecked === true) {\n                  objectChecked.push({\n                    \"id\": items.id\n                  });\n                  console.log(\"item checked\", fruits[index].isChecked);\n                } else {\n                  objectChecked = objectChecked.filter(itm => {\n                    return itm.id != itemIndex;\n                  });\n                }\n              } else {\n                if (objectChecked.length < fruits.length) {\n                  allChecked = false;\n                  console.log(\"true\", objectChecked.length, fruits.length, allChecked);\n                } else if (objectChecked.length === fruits.length) {\n                  console.log(\"false\", objectChecked.length, fruits.length);\n                  allChecked = true;\n                }\n\n                console.log(\"index\", itemIndex);\n                console.log(\"obj\", objectChecked);\n              }\n            });\n          } ///\n\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"select items \", objectChecked.length, \" && select All \", React.createElement(\"span\", {\n      style: {\n        fontSize: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.allChecked ? \"True\" : \"False\"))), React.createElement(Checkbox, {\n      value: \"selectAll\",\n      label: \"Select All\",\n      checked: this.state.allChecked,\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return React.createElement(Checkbox, {\n        key: index,\n        id: fruits.id,\n        label: fruits.value,\n        value: fruits.value,\n        checked: fruits.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","Checkbox","objectChecked","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","itemIndex","id","setState","prevState","fruits","allChecked","map","items","index","parseInt","isChecked","push","console","log","filter","itm","length","state","render","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n    handleAllChecked = (event) => {\n        let itemName = event.target.value; //get target event value in let\n        let isCheckedItem = event.target.checked; //get chacked event value in let\n        let itemIndex = event.target.id   //get chacked event id in itemIndex\n\n\n        this.setState(prevState => {\n            let { fruits, allChecked } = prevState;\n            if (itemName == \"selectAll\") {\n                allChecked = isCheckedItem;\n\n                // fruits = fruits.map((item) => ({ ...item, isChecked: true }))\n                // if (allChecked === true) {\n                //     objectChecked = [];\n                //     for (let i = 0; i < fruits.length; i++) {\n                //         objectChecked.push({ \"id\": fruits[i].id })\n                //     }\n                // }\n                // else {\n                //     fruits = fruits.map((item) => ({ ...item, isChecked: false }));\n                //     objectChecked = [];\n                // }\n                // console.log(\"id to show\", objectChecked);\n            }\n\n            // single elemnt\n\n            else {\n                fruits.map((items, index) => {\n                    if (items.id === parseInt(itemIndex)) {\n                        items.isChecked = isCheckedItem;\n                        if (fruits[index].isChecked === true) {\n                            objectChecked.push({ \"id\": items.id });\n                            console.log(\"item checked\", fruits[index].isChecked)\n                        }\n                        else {\n                            objectChecked = objectChecked.filter(itm => {\n                                return itm.id != itemIndex;\n                            })\n                        }\n                    }\n\n                    else {\n                        if (objectChecked.length < fruits.length) {\n                            allChecked = false;\n                            console.log(\"true\", objectChecked.length, fruits.length, allChecked);\n                        }\n                        else if (objectChecked.length === fruits.length) {\n                            console.log(\"false\", objectChecked.length, fruits.length)\n                            allChecked = true;\n                        }\n                        console.log(\"index\", itemIndex)\n                        console.log(\"obj\", objectChecked);\n                    }\n                })\n            }\n            ///\n            return { fruits, allChecked }\n        })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                   <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? \"True\" : \"False\"}</span></h2>\n                </div>\n                <Checkbox value=\"selectAll\" label=\"Select All\" checked={this.state.allChecked} onClick={this.handleAllChecked} />\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                        <Checkbox\n                            key={index}\n                            id={fruits.id}\n                            label={fruits.value}\n                            value={fruits.value}\n                            checked={fruits.isChecked}\n                            onChange={this.handleAllChecked}\n                        />\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}