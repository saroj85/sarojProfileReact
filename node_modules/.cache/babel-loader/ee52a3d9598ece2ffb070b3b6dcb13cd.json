{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nlet dataobj = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  } // handleAllChecked = (event) =>{\n  //     let itemName = event.target.value;\n  //     let isCheckedItems = event.target.checked;\n  //     this.setState(prevState  => {\n  //         let { fruits, allChecked} = prevState;\n  //         allChecked = isCheckedItems;\n  //         if(itemName === \"selectAll\"){\n  //             if(allChecked === true){\n  //                 console.log(allChecked);\n  //                 fruits = fruits.map(item => {\n  //                     dataobj.push(item.id);\n  //                     return {...item, isChecked: true}\n  //                 }) \n  //                 dataobj.push(fruits.id);\n  //                 console.log(\"data\", dataobj)\n  //             }\n  //             else{\n  //                 fruits = fruits.map(item => {\n  //                     const index = dataobj.indexOf(item.id);\n  //                     dataobj.splice(index, 1);\n  //                     return {...item, isChecked : false}\n  //                 }) \n  //                 console.log(dataobj);\n  //             }\n  //         }\n  //         else{\n  //             let tempFruits = fruits;\n  //             tempFruits.forEach(item => {\n  //                 if (item.value === itemName) {\n  //                     item.isChecked = isCheckedItems;\n  //                     console.log(\"Hey\",item.isChecked, fruits)\n  //                 }\n  //             });\n  //         }\n  //         return {fruits , allChecked}\n  //     })\n  // }\n  // for(let i = 0; i < fruits.length; i++){\n  //     if(itemName === fruits[i].value){\n  //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n  //     }\n  //     else{\n  //         fruits[i].isChecked = false;\n  //     }\n  // }\n\n\n  render() {\n    const fruits = this.state.fruits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        key: fruit.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","dataobj","checkbox","constructor","props","state","fruits","id","value","isChecked","allChecked","render","handleAllChecked","length","map","fruit","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nlet dataobj = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 12, value: 'guva', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'banana', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n    // handleAllChecked = (event) =>{\n    //     let itemName = event.target.value;\n    //     let isCheckedItems = event.target.checked;\n    //     this.setState(prevState  => {\n    //         let { fruits, allChecked} = prevState;\n    //         allChecked = isCheckedItems;\n    //         if(itemName === \"selectAll\"){\n    //             if(allChecked === true){\n    //                 console.log(allChecked);\n    //                 fruits = fruits.map(item => {\n    //                     dataobj.push(item.id);\n    //                     return {...item, isChecked: true}\n    //                 }) \n    //                 dataobj.push(fruits.id);\n    //                 console.log(\"data\", dataobj)\n    //             }\n    //             else{\n    //                 fruits = fruits.map(item => {\n    //                     const index = dataobj.indexOf(item.id);\n    //                     dataobj.splice(index, 1);\n    //                     return {...item, isChecked : false}\n    //                 }) \n    //                 console.log(dataobj);\n    //             }\n\n    //         }\n\n    //         else{\n    //             let tempFruits = fruits;\n    //             tempFruits.forEach(item => {\n    //                 if (item.value === itemName) {\n    //                     item.isChecked = isCheckedItems;\n    //                     console.log(\"Hey\",item.isChecked, fruits)\n    //                 }\n    //             });\n    //         }\n\n    //         return {fruits , allChecked}\n    //     })\n    // }\n\n\n    // for(let i = 0; i < fruits.length; i++){\n    //     if(itemName === fruits[i].value){\n    //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n    //     }\n    //     else{\n    //         fruits[i].isChecked = false;\n    //     }\n    // }\n\n    render() {\n        const { fruits } = this.state;\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n                    return (\n                        <div key={fruit.id} >\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                            {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}