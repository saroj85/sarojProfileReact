{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItems = event.target.checked;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n        allChecked = isCheckedItems;\n\n        if (itemName === \"selectAll\") {\n          if (allChecked === true) {\n            console.log(allChecked);\n            fruits = fruits.map(item => {\n              selectedValue.push(item.id);\n              return _objectSpread({}, item, {\n                isChecked: true\n              });\n            });\n            selectedValue.push(fruits.id);\n            console.log(\"data\", dataobj);\n          } else {\n            fruits = fruits.map(item => {\n              const index = dataobj.indexOf(item.id);\n              dataobj.splice(index, 1);\n              return _objectSpread({}, item, {\n                isChecked: false\n              });\n            });\n            console.log(dataobj);\n          }\n        } else {\n          let tempFruits = fruits;\n          tempFruits.forEach(item => {\n            if (item.value === itemName) {\n              item.isChecked = isCheckedItems;\n              console.log(\"Hey\", item.isChecked, fruits);\n            }\n          });\n        }\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false,\n      selectedValue: []\n    };\n  } // handleAllChecked = event => {\n  //     let value = event.target.value;\n  //     let fruits = [...this.state.fruits];\n  //     if (value === 'selectAll' && !this.state.allChecked ) {\n  //         const temp = fruits && fruits.length > 0 && fruits.map(data => {\n  //             data.isChecked = true;\n  //             return (data)\n  //         });\n  //         this.setState({\n  //             fruits: [...temp],\n  //             selectedValue: [...temp],\n  //             allChecked: true\n  //         })\n  //     }\n  //     else if (value === 'selectAll' && this.state.allChecked) {\n  //         const temp = fruits && fruits.length > 0 && fruits.map(data => {\n  //             data.isChecked = false;\n  //             return (data)\n  //         });\n  //         this.setState({\n  //             fruits: [...temp]\n  //         })\n  //     }\n  // };\n\n\n  // for(let i = 0; i < fruits.length; i++){\n  //     if(itemName === fruits[i].value){\n  //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n  //     }\n  //     else{\n  //         fruits[i].isChecked = false;\n  //     }\n  // }\n  render() {\n    console.log(\"State\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItems","checked","setState","prevState","fruits","allChecked","console","log","map","item","selectedValue","push","id","isChecked","dataobj","index","indexOf","splice","tempFruits","forEach","state","render","length","fruit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 12, value: 'guva', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'banana', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n            selectedValue: []\n        }\n    }\n\n    // handleAllChecked = event => {\n    //     let value = event.target.value;\n    //     let fruits = [...this.state.fruits];\n    //     if (value === 'selectAll' && !this.state.allChecked ) {\n    //         const temp = fruits && fruits.length > 0 && fruits.map(data => {\n    //             data.isChecked = true;\n    //             return (data)\n    //         });\n\n    //         this.setState({\n    //             fruits: [...temp],\n    //             selectedValue: [...temp],\n    //             allChecked: true\n    //         })\n    //     }\n    //     else if (value === 'selectAll' && this.state.allChecked) {\n    //         const temp = fruits && fruits.length > 0 && fruits.map(data => {\n    //             data.isChecked = false;\n    //             return (data)\n    //         });\n\n    //         this.setState({\n    //             fruits: [...temp]\n    //         })\n    //     }\n    // };\n\n    handleAllChecked = (event) =>{\n        let itemName = event.target.value;\n        let isCheckedItems = event.target.checked;\n        this.setState(prevState  => {\n            let { fruits, allChecked} = prevState;\n            allChecked = isCheckedItems;\n            if(itemName === \"selectAll\"){\n                if(allChecked === true){\n                    console.log(allChecked);\n                    fruits = fruits.map(item => {\n                        selectedValue.push(item.id);\n                        return {...item, isChecked: true}\n                    }) \n                    selectedValue.push(fruits.id);\n                    console.log(\"data\", dataobj)\n                }\n                \n                else{\n                    fruits = fruits.map(item => {\n                        const index = dataobj.indexOf(item.id);\n                        dataobj.splice(index, 1);\n                        return {...item, isChecked : false}\n                    }) \n                    console.log(dataobj);\n                }\n            }\n            else{\n                let tempFruits = fruits;\n                tempFruits.forEach(item => {\n                    if (item.value === itemName) {\n                        item.isChecked = isCheckedItems;\n                        console.log(\"Hey\",item.isChecked, fruits)\n                    }\n                });\n            }\n            \n            return {fruits , allChecked}\n        })\n    }\n\n\n    // for(let i = 0; i < fruits.length; i++){\n    //     if(itemName === fruits[i].value){\n    //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n    //     }\n    //     else{\n    //         fruits[i].isChecked = false;\n    //     }\n    // }\n\n    render() {\n        console.log(\"State\", this.state);\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n                    return (\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                                {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}