{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value; //get target event value in let\n\n      let isCheckedItem = event.target.checked; //get chacked event value in let\n\n      let itemIndex = event.target.id; //get chacked event id in itemIndex\n\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem;\n          fruits = fruits.map(item => _objectSpread({}, item, {\n            isChecked: true\n          }));\n\n          if (allChecked === true) {\n            objectChecked = [];\n\n            for (let i = 0; i < fruits.length; i++) {\n              objectChecked.push({\n                \"id\": fruits[i].id\n              });\n            }\n          } else {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: false\n            }));\n            objectChecked = [];\n          }\n\n          console.log(\"id to show\", objectChecked);\n        } // single elemnt\n        else {\n            fruits.map((items, index) => {\n              if (items.id === parseInt(itemIndex)) {\n                items.isChecked = isCheckedItem;\n\n                if (fruits[index].isChecked === true) {\n                  objectChecked.push({\n                    \"id\": items.id\n                  });\n                  console.log(\"item checked\", fruits[index].isChecked);\n                } else {\n                  objectChecked = objectChecked.filter(itm => {\n                    return itm.id != itemIndex;\n                  });\n                }\n              } else {\n                if (objectChecked.length < fruits.length) {\n                  allChecked = false;\n                  console.log(\"true\", objectChecked.length, fruits.length, allChecked);\n                } else if (objectChecked.length === fruits.length) {\n                  console.log(\"false\", objectChecked.length, fruits.length);\n                  allChecked = true;\n                }\n\n                console.log(\"index\", itemIndex);\n                console.log(\"obj\", objectChecked);\n              }\n            });\n          } ///\n\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"select items \", objectChecked.length, \" && select All \", React.createElement(\"span\", {\n      style: {\n        fontSize: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.allChecked ? \"True\" : \"False\"))), React.createElement(Checkbox, {\n      value: \"selectAll\",\n      label: \"Select All\",\n      checked: this.state.allChecked,\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return React.createElement(Checkbox, {\n        key: fruits.id,\n        id: fruits.id,\n        label: fruits.value,\n        defaultValue: fruits.value,\n        checked: fruits.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","Checkbox","objectChecked","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","itemIndex","id","setState","prevState","fruits","allChecked","map","item","isChecked","i","length","push","console","log","items","index","parseInt","filter","itm","state","render","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n    handleAllChecked = (event) => {\n        let itemName = event.target.value; //get target event value in let\n        let isCheckedItem = event.target.checked; //get chacked event value in let\n        let itemIndex = event.target.id   //get chacked event id in itemIndex\n\n\n        this.setState(prevState => {\n            let { fruits, allChecked } = prevState;\n            if (itemName == \"selectAll\") {\n                allChecked = isCheckedItem;\n                fruits = fruits.map((item) => ({ ...item, isChecked: true }))\n                if (allChecked === true) {\n                    objectChecked = [];\n                    for (let i = 0; i < fruits.length; i++) {\n                        objectChecked.push({ \"id\": fruits[i].id })\n                    }\n                }\n                else {\n                    fruits = fruits.map((item) => ({ ...item, isChecked: false }));\n                    objectChecked = [];\n                }\n                console.log(\"id to show\", objectChecked);\n            }\n\n            // single elemnt\n\n            else {\n                fruits.map((items, index) => {\n                    if (items.id === parseInt(itemIndex)) {\n                        items.isChecked = isCheckedItem;\n                        if (fruits[index].isChecked === true) {\n                            objectChecked.push({ \"id\": items.id });\n                            console.log(\"item checked\", fruits[index].isChecked)\n                        }\n                        else {\n                            objectChecked = objectChecked.filter(itm => {\n                                return itm.id != itemIndex;\n                            })\n                        }\n                    }\n\n                    else {\n                        if (objectChecked.length < fruits.length) {\n                            allChecked = false;\n                            console.log(\"true\", objectChecked.length, fruits.length, allChecked);\n                        }\n                        else if (objectChecked.length === fruits.length) {\n                            console.log(\"false\", objectChecked.length, fruits.length)\n                            allChecked = true;\n                        }\n                        console.log(\"index\", itemIndex)\n                        console.log(\"obj\", objectChecked);\n                    }\n                })\n            }\n            ///\n            return { fruits, allChecked }\n        })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                   <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? \"True\" : \"False\"}</span></h2>\n                </div>\n                <Checkbox value=\"selectAll\" label=\"Select All\" checked={this.state.allChecked} onClick={this.handleAllChecked} />\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                        <Checkbox\n                            key={fruits.id}\n                            id={fruits.id}\n                            label={fruits.value}\n                            defaultValue={fruits.value}\n                            checked={fruits.isChecked}\n                            onChange={this.handleAllChecked}\n                        />\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}