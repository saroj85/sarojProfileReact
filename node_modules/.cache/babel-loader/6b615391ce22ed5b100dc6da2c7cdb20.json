{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckChieldElement = event => {\n      let fruites = this.state.fruites;\n      fruites.forEach(fruite => {\n        if (fruite.value === event.target.value) fruite.isChecked = event.target.checked;\n      });\n      this.setState({\n        fruites: fruites\n      });\n    };\n\n    this.handlerAllChecked = event => {\n      let tempfruits = this.state.fruits;\n      tempfruits.forEach(fruit => {\n        if (fruit.isChecked = event.target.checked) {\n          this.setState({\n            fruits: tempfruits\n          });\n        }\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        name: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        name: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        name: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        name: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        name: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        name: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        name: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        name: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        name: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        name: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        name: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        name: 'melon',\n        isChecked: false\n      }]\n    };\n  }\n\n  render() {\n    const fruits = this.state.fruits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handlerAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        key: fruit.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.name,\n        checked: fruit.isChecked,\n        onChange: this.handleCheckChieldElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), fruit.name);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","checkbox","constructor","props","handleCheckChieldElement","event","fruites","state","forEach","fruite","value","target","isChecked","checked","setState","handlerAllChecked","tempfruits","fruits","fruit","id","name","render","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmBlBC,wBAnBkB,GAmBUC,KAAD,IAAW;AAClC,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAzB;AACAA,MAAAA,OAAO,CAACE,OAAR,CAAgBC,MAAM,IAAI;AACxB,YAAIA,MAAM,CAACC,KAAP,KAAiBL,KAAK,CAACM,MAAN,CAAaD,KAAlC,EACED,MAAM,CAACG,SAAP,GAAoBP,KAAK,CAACM,MAAN,CAAaE,OAAjC;AACD,OAHH;AAIA,WAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACF,KA1BgB;;AAAA,SA6BlBS,iBA7BkB,GA6BCV,KAAD,IAAS;AACvB,UAAIW,UAAU,GAAG,KAAKT,KAAL,CAAWU,MAA5B;AACAD,MAAAA,UAAU,CAACR,OAAX,CAAoBU,KAAD,IAAS;AACxB,YAAGA,KAAK,CAACN,SAAN,GAAkBP,KAAK,CAACM,MAAN,CAAaE,OAAlC,EAA0C;AACtC,eAAKC,QAAL,CAAc;AACVG,YAAAA,MAAM,EAAGD;AADC,WAAd;AAGH;AACJ,OAND;AAQH,KAvCiB;;AAEd,SAAKT,KAAL,GAAa;AACTU,MAAAA,MAAM,EAAG,CACL;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,OAAX;AAAmBR,QAAAA,SAAS,EAAC;AAA7B,OADK,EAEL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,QAAX;AAAoBR,QAAAA,SAAS,EAAC;AAA9B,OAFK,EAGL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,OAAX;AAAmBR,QAAAA,SAAS,EAAC;AAA7B,OAHK,EAIL;AAACO,QAAAA,EAAE,EAAC,EAAJ;AAAOC,QAAAA,IAAI,EAAC,MAAZ;AAAmBR,QAAAA,SAAS,EAAC;AAA7B,OAJK,EAKL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,QAAX;AAAoBR,QAAAA,SAAS,EAAC;AAA9B,OALK,EAML;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,MAAX;AAAkBR,QAAAA,SAAS,EAAC;AAA5B,OANK,EAOL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,WAAX;AAAuBR,QAAAA,SAAS,EAAC;AAAjC,OAPK,EAQL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,YAAX;AAAwBR,QAAAA,SAAS,EAAC;AAAlC,OARK,EASL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,QAAX;AAAoBR,QAAAA,SAAS,EAAC;AAA9B,OATK,EAUL;AAACO,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC,QAAX;AAAoBR,QAAAA,SAAS,EAAC;AAA9B,OAVK,EAWL;AAACO,QAAAA,EAAE,EAAC,EAAJ;AAAOC,QAAAA,IAAI,EAAC,OAAZ;AAAoBR,QAAAA,SAAS,EAAC;AAA9B,OAXK,EAYL;AAACO,QAAAA,EAAE,EAAC,EAAJ;AAAOC,QAAAA,IAAI,EAAC,OAAZ;AAAoBR,QAAAA,SAAS,EAAC;AAA9B,OAZK;AADA,KAAb;AAgBH;;AAsBDS,EAAAA,MAAM,GAAG;AAAA,UACEJ,MADF,GACY,KAAKV,KADjB,CACEU,MADF;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAC,WAA7B;AAAyC,MAAA,OAAO,EAAE,KAAKF,iBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAIKE,MAAM,IAAIA,MAAM,CAACK,MAAP,GAAgB,CAA1B,IAA+BL,MAAM,CAACM,GAAP,CAAW,CAACL,KAAD,EAAOM,KAAP,KAAe;AACtD,aACG;AAAK,QAAA,GAAG,EAAEN,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAED,KAAK,CAACE,IAFjB;AAGI,QAAA,OAAO,EAAEF,KAAK,CAACN,SAHnB;AAII,QAAA,QAAQ,EAAE,KAAKR,wBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAMUc,KAAK,CAACE,IANhB,CADH;AAUH,KAX+B,CAJpC,CADJ;AAoBH;;AAhE4B;;AAmEjC,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass checkbox extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fruits : [\n                {id:1,name:'apple',isChecked:false},\n                {id:2,name:'banana',isChecked:false},\n                {id:3,name:'mango',isChecked:false},\n                {id:12,name:'guva',isChecked:false},\n                {id:4,name:'papaya',isChecked:false},\n                {id:5,name:'kiwi',isChecked:false},\n                {id:6,name:'pineapple',isChecked:false},\n                {id:7,name:'strawberry',isChecked:false},\n                {id:8,name:'banana',isChecked:false},\n                {id:9,name:'orange',isChecked:false},\n                {id:10,name:'peach',isChecked:false},\n                {id:11,name:'melon',isChecked:false}\n            ],\n        }\n    }\n    handleCheckChieldElement = (event) => {\n        let fruites = this.state.fruites\n        fruites.forEach(fruite => {\n          if (fruite.value === event.target.value)\n            fruite.isChecked =  event.target.checked\n          })\n        this.setState({fruites: fruites})\n     }\n\n    \n    handlerAllChecked=(event)=>{\n        let tempfruits = this.state.fruits\n        tempfruits.forEach((fruit)=>{\n            if(fruit.isChecked = event.target.checked){\n                this.setState({\n                    fruits : tempfruits,\n                },)\n            }\n        })\n\n    }\n    render() {\n        const {fruits} = this.state;\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handlerAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {fruits && fruits.length > 0 && fruits.map((fruit,index)=>{\n                    return(\n                       <div key={fruit.id} >\n                            <input\n                                type=\"checkbox\" \n                                value={fruit.name} \n                                checked={fruit.isChecked}\n                                onChange={this.handleCheckChieldElement} />\n                                {fruit.name}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}