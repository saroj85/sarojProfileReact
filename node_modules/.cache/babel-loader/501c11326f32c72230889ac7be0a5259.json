{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nimport { all } from 'q';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let name = event.target.value;\n      let itemisChecked = event.target.checked;\n      let itemIndex = event.target.id;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked;\n\n        if (name === \"selectAll\") {\n          allChecked = itemisChecked;\n\n          if (allChecked === true) {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: true\n            }));\n            objectChecked.push(item.id);\n          } else {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: false\n            }));\n            objectChecked = [];\n          }\n        } else {\n          fruits.map((item, index) => {\n            if (item.value === name) {\n              item.isChecked = itemisChecked;\n\n              if (item.isChecked === true) {\n                objectChecked.push(item.id);\n              } else {\n                objectChecked = objectChecked.filter((item, index) => {\n                  return objectChecked.id !== index;\n                });\n              }\n            }\n          });\n        }\n\n        console.log(objectChecked);\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      type: \"checkbox\",\n      defaultValue: \"selectAll\",\n      label: \"Select All\",\n      checked: this.state.allChecked,\n      onChange: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Checkbox // key={fruits.id}\n      , {\n        type: \"checkbox\",\n        id: fruits.id,\n        label: fruits.value,\n        defaultValue: fruits.value,\n        checked: fruits.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","Checkbox","all","objectChecked","checkbox","constructor","props","handleAllChecked","event","name","target","value","itemisChecked","checked","itemIndex","id","setState","prevState","fruits","allChecked","map","item","isChecked","push","index","filter","console","log","state","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './share/checkbox';\nimport { all } from 'q';\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n\n\n    handleAllChecked = (event) => {\n        let name = event.target.value;\n        let itemisChecked = event.target.checked;\n        let itemIndex = event.target.id;\n\n\n        this.setState(prevState => {\n            let { fruits, allChecked } = prevState;\n\n            if (name === \"selectAll\") {\n                allChecked = itemisChecked;\n                if (allChecked === true) {\n                    fruits = fruits.map((item) => ({ ...item, isChecked: true }))\n                    objectChecked.push(item.id)\n                }\n                else {\n                    fruits = fruits.map((item) => ({ ...item, isChecked: false }))\n                    objectChecked = [];\n                }\n\n            }\n\n            else {\n\n                fruits.map((item, index) => {\n                    if (item.value === name) {\n                        item.isChecked = itemisChecked;\n                        if(item.isChecked === true){\n                            objectChecked.push(item.id);\n                        }\n                        else{\n                            objectChecked = objectChecked.filter((item,index)=>{\n                                return objectChecked.id !== index;\n                            })\n                        }\n                    }\n                })\n            }\n            console.log(objectChecked);\n            return { fruits, allChecked }\n        })\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    {/* <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? \"True\" : \"False\"}</span></h2> */}\n                </div>\n                <Checkbox type=\"checkbox\" defaultValue=\"selectAll\" label=\"Select All\" checked={this.state.allChecked} onChange={this.handleAllChecked} />\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                        <div key={index}>\n                            <Checkbox\n                                // key={fruits.id}\n                                type=\"checkbox\"\n                                id={fruits.id}\n                                label={fruits.value}\n                                defaultValue={fruits.value}\n                                checked={fruits.isChecked}\n                                onChange={this.handleAllChecked}\n                            />\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}