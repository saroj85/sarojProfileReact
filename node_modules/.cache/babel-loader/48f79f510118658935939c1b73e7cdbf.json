{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nlet objectChecked = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value; //get target event value in let\n\n      let isCheckedItem = event.target.checked; //get chacked event value in let\n\n      let itemIndex = event.target.id; //get chacked event id in itemIndex\n\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked,\n            selectedValue = prevState.selectedValue;\n        let length = fruits.length;\n        let selectLen = objectChecked.length;\n        console.log(\"hey \", selectLen);\n\n        if (itemName == \"selectAll\") {\n          allChecked = isCheckedItem;\n          fruits = fruits.map(item => _objectSpread({}, item, {\n            isChecked: true\n          }));\n\n          if (allChecked === true) {\n            for (let i = 0; i < fruits.length; i++) {\n              objectChecked.push({\n                \"id\": fruits[i].id\n              });\n            }\n          } else {\n            fruits = fruits.map(item => _objectSpread({}, item, {\n              isChecked: false\n            }));\n            objectChecked = [];\n          }\n\n          console.log(\"id to show\", objectChecked);\n        } // single elemnt\n        // else if(){\n        // }\n        else {\n            fruits.map((items, index) => {\n              if (items.id === parseInt(itemIndex)) {\n                items.isChecked = isCheckedItem;\n\n                if (fruits[index].isChecked === true) {\n                  objectChecked.push({\n                    \"id\": items.id\n                  });\n                  console.log(\"item checked\", fruits[index].isChecked);\n                } else {\n                  objectChecked = objectChecked.filter(itm => {\n                    return itm.id != itemIndex;\n                  });\n                }\n              } else {\n                console.log(\"index\", itemIndex);\n                console.log(\"Heee\", objectChecked);\n              }\n            });\n          } ///\n\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false,\n      selectedValue: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Select All\"), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: fruits.id,\n        type: \"checkbox\",\n        value: fruits.value,\n        checked: fruits.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), fruits.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","objectChecked","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItem","checked","itemIndex","id","setState","prevState","fruits","allChecked","selectedValue","length","selectLen","console","log","map","item","isChecked","i","push","items","index","parseInt","filter","itm","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nlet objectChecked = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n            selectedValue: [],\n        }\n    }\n\n    handleAllChecked = (event) => {\n        let itemName = event.target.value; //get target event value in let\n        let isCheckedItem = event.target.checked; //get chacked event value in let\n        let itemIndex = event.target.id   //get chacked event id in itemIndex\n\n\n        this.setState(prevState => {\n            let { fruits, allChecked, selectedValue } = prevState;\n            let length = fruits.length;\n            let selectLen = objectChecked.length;\n            console.log(\"hey \",selectLen)\n\n            if (itemName == \"selectAll\") {\n                allChecked = isCheckedItem;\n                fruits = fruits.map((item) => ({ ...item, isChecked: true }))\n                if (allChecked === true) {\n                    for (let i = 0; i < fruits.length; i++) {\n                        objectChecked.push({ \"id\": fruits[i].id })\n                    }\n                }\n\n                else {\n                    fruits = fruits.map((item) => ({ ...item, isChecked: false }));\n                    objectChecked = [];\n                }\n                console.log(\"id to show\", objectChecked);\n            }\n\n            // single elemnt\n\n            // else if(){\n\n\n                \n            // }\n\n            else {\n                fruits.map((items, index) => {\n                    if (items.id === parseInt(itemIndex)) {\n                        items.isChecked = isCheckedItem;\n                        if (fruits[index].isChecked === true) {\n                            objectChecked.push({ \"id\": items.id });\n                            console.log(\"item checked\", fruits[index].isChecked)\n                        }\n                        else {\n                            objectChecked = objectChecked.filter(itm => {\n                                return itm.id != itemIndex;\n                            })\n                        }\n                    }\n                    else {\n                        console.log(\"index\", itemIndex)\n                        console.log(\"Heee\", objectChecked);\n\n                    }\n                })\n            }\n            ///\n           \n            \n\n\n            return { fruits, allChecked }\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                {/* <hr></hr> */}\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {\n                    return (\n                        <div>\n                            <input\n                                id={fruits.id}\n                                type=\"checkbox\"\n                                value={fruits.value}\n                                checked={fruits.isChecked}\n                                onChange={this.handleAllChecked} />\n                            {fruits.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}