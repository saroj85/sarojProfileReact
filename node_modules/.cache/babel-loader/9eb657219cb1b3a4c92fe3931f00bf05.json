{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let value = event.target.value;\n      let fruits = [...this.state.fruits];\n\n      if (value === 'selectAll' && !this.state.allChecked) {\n        const temp = fruits && fruits.length > 0 && fruits.map(data => {\n          return data.isChecked = true;\n        });\n        console.log(temp); // this.setState({\n        //     fruits: [...temp],\n        //     selectedValue: [...temp]\n        // })\n      }\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false,\n      selectedValue: []\n    };\n  }\n\n  // handleAllChecked = (event) =>{\n  //     let itemName = event.target.value;\n  //     let isCheckedItems = event.target.checked;\n  //     this.setState(prevState  => {\n  //         let { fruits, allChecked} = prevState;\n  //         allChecked = isCheckedItems;\n  //         if(itemName === \"selectAll\"){\n  //             if(allChecked === true){\n  //                 console.log(allChecked);\n  //                 fruits = fruits.map(item => {\n  //                     dataobj.push(item.id);\n  //                     return {...item, isChecked: true}\n  //                 }) \n  //                 dataobj.push(fruits.id);\n  //                 console.log(\"data\", dataobj)\n  //             }\n  //             else{\n  //                 fruits = fruits.map(item => {\n  //                     const index = dataobj.indexOf(item.id);\n  //                     dataobj.splice(index, 1);\n  //                     return {...item, isChecked : false}\n  //                 }) \n  //                 console.log(dataobj);\n  //             }\n  //         }\n  //         else{\n  //             let tempFruits = fruits;\n  //             tempFruits.forEach(item => {\n  //                 if (item.value === itemName) {\n  //                     item.isChecked = isCheckedItems;\n  //                     console.log(\"Hey\",item.isChecked, fruits)\n  //                 }\n  //             });\n  //         }\n  //         return {fruits , allChecked}\n  //     })\n  // }\n  // for(let i = 0; i < fruits.length; i++){\n  //     if(itemName === fruits[i].value){\n  //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n  //     }\n  //     else{\n  //         fruits[i].isChecked = false;\n  //     }\n  // }\n  render() {\n    console.log(\"State\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","checkbox","constructor","props","handleAllChecked","event","value","target","fruits","state","allChecked","temp","length","map","data","isChecked","console","log","id","selectedValue","render","fruit","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 12, value: 'guva', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'banana', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n            selectedValue: []\n        }\n    }\n\n    handleAllChecked = event => {\n        let value = event.target.value;\n        let fruits = [...this.state.fruits];\n\n        if (value === 'selectAll' && !this.state.allChecked ) {\n            const temp = fruits && fruits.length > 0 && fruits.map(data => {\n                return (data.isChecked = true)\n            });\n\n            console.log(temp)\n            // this.setState({\n            //     fruits: [...temp],\n            //     selectedValue: [...temp]\n            // })\n        }\n    };\n\n    // handleAllChecked = (event) =>{\n    //     let itemName = event.target.value;\n    //     let isCheckedItems = event.target.checked;\n    //     this.setState(prevState  => {\n    //         let { fruits, allChecked} = prevState;\n    //         allChecked = isCheckedItems;\n    //         if(itemName === \"selectAll\"){\n    //             if(allChecked === true){\n    //                 console.log(allChecked);\n    //                 fruits = fruits.map(item => {\n    //                     dataobj.push(item.id);\n    //                     return {...item, isChecked: true}\n    //                 }) \n    //                 dataobj.push(fruits.id);\n    //                 console.log(\"data\", dataobj)\n    //             }\n    //             else{\n    //                 fruits = fruits.map(item => {\n    //                     const index = dataobj.indexOf(item.id);\n    //                     dataobj.splice(index, 1);\n    //                     return {...item, isChecked : false}\n    //                 }) \n    //                 console.log(dataobj);\n    //             }\n\n    //         }\n\n    //         else{\n    //             let tempFruits = fruits;\n    //             tempFruits.forEach(item => {\n    //                 if (item.value === itemName) {\n    //                     item.isChecked = isCheckedItems;\n    //                     console.log(\"Hey\",item.isChecked, fruits)\n    //                 }\n    //             });\n    //         }\n\n    //         return {fruits , allChecked}\n    //     })\n    // }\n\n\n    // for(let i = 0; i < fruits.length; i++){\n    //     if(itemName === fruits[i].value){\n    //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n    //     }\n    //     else{\n    //         fruits[i].isChecked = false;\n    //     }\n    // }\n\n    render() {\n        console.log(\"State\", this.state);\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n                    return (\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                                {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}