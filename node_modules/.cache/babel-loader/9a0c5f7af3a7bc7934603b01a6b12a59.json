{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckChieldElement = event => {\n      let fruites = this.state.fruits;\n      fruites.forEach(fruite => {\n        if (fruite.value === event.target.name) fruite.isChecked = event.target.checked;\n      });\n      this.setState({\n        fruits: fruites\n      }, () => {\n        console.log(\"item\", this.state.fruits);\n      });\n    };\n\n    this.handleAllChecked = event => {\n      let fruites = this.state.fruits;\n      fruites.forEach(fruite => fruite.isChecked = event.target.checked);\n      this.setState({\n        fruits: fruites\n      }, () => {\n        console.log(\"hey\", this.state.fruits);\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }]\n    };\n  }\n\n  render() {\n    const fruits = this.state.fruits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        key: fruit.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleCheckChieldElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","checkbox","constructor","props","handleCheckChieldElement","event","fruites","state","fruits","forEach","fruite","value","target","name","isChecked","checked","setState","console","log","handleAllChecked","id","render","length","map","fruit","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass checkbox extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fruits : [\n                {id:1,value:'apple',isChecked:false},\n                {id:2,value:'banana',isChecked:false},\n                {id:3,value:'mango',isChecked:false},\n                {id:12,value:'guva',isChecked:false},\n                {id:4,value:'papaya',isChecked:false},\n                {id:5,value:'kiwi',isChecked:false},\n                {id:6,value:'pineapple',isChecked:false},\n                {id:7,value:'strawberry',isChecked:false},\n                {id:8,value:'banana',isChecked:false},\n                {id:9,value:'orange',isChecked:false},\n                {id:10,value:'peach',isChecked:false},\n                {id:11,value:'melon',isChecked:false}\n            ],\n        }\n    }\n    handleCheckChieldElement = (event) => {\n        let fruites = this.state.fruits\n        fruites.forEach(fruite => {\n          if (fruite.value === event.target.name)\n            fruite.isChecked =  event.target.checked\n          })\n        this.setState({fruits: fruites},()=>{\n            console.log(\"item\",this.state.fruits)\n        })\n     }\n\n    \n     handleAllChecked = (event) => {\n        let fruites = this.state.fruits\n        fruites.forEach(fruite => fruite.isChecked = event.target.checked) \n        this.setState({fruits: fruites},()=>{\n            console.log(\"hey\", this.state.fruits)\n        })\n      }\n\n\n    render() {\n        const {fruits} = this.state;\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {fruits && fruits.length > 0 && fruits.map((fruit,index)=>{\n                    return(\n                       <div key={fruit.id} >\n                            <input\n                                type=\"checkbox\" \n                                value={fruit.value} \n                                checked={fruit.isChecked}\n                                onChange={this.handleCheckChieldElement} />\n                                {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}