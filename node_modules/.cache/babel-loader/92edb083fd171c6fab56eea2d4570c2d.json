{"ast":null,"code":"import _objectSpread from \"/home/bigstack02/Desktop/SarojReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItems = event.target.checked;\n      this.setState(prevState => {\n        const len = fruits.length;\n        console.log(\"len\", len);\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked,\n            selectedValue = prevState.selectedValue;\n        allChecked = isCheckedItems;\n\n        if (itemName === \"selectAll\") {\n          if (allChecked === true) {\n            console.log(allChecked);\n            fruits = fruits.map(item => {\n              selectedValue.push(item);\n              return _objectSpread({}, item, {\n                isChecked: true\n              });\n            });\n            console.log(\"data\", selectedValue);\n          } else {\n            fruits = fruits.map(item => {\n              // const index = selectedValue.indexOf(item.id);\n              // selectedValplice(index, 1);\n              selectedValue = []; // selectedValue.splice(index, 1);\n\n              return _objectSpread({}, item, {\n                isChecked: false\n              });\n            });\n            console.log(selectedValue);\n          }\n        } else {\n          let tempFruits = fruits;\n          tempFruits.forEach(item => {\n            if (item.value === itemName) {\n              item.isChecked = isCheckedItems;\n              console.log(\"Hey\", item.isChecked, fruits);\n            }\n          });\n        }\n\n        return {\n          fruits,\n          allChecked\n        };\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'vhgv',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false,\n      selectedValue: []\n    };\n  }\n\n  // for(let i = 0; i < fruits.length; i++){\n  //     if(itemName === fruits[i].value){\n  //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n  //     }\n  //     else{\n  //         fruits[i].isChecked = false;\n  //     }\n  // }\n  render() {\n    console.log(\"State\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItems","checked","setState","prevState","len","fruits","length","console","log","allChecked","selectedValue","map","item","push","isChecked","tempFruits","forEach","state","id","render","fruit","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'vhgv', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n            selectedValue: [],\n        }\n    }\n\n    handleAllChecked = (event) =>{\n        \n        let itemName = event.target.value;\n        let isCheckedItems = event.target.checked;\n        this.setState(prevState  => {\n            const len = fruits.length;\n            console.log(\"len\", len)\n            let { fruits, allChecked, selectedValue} = prevState;\n            allChecked = isCheckedItems;\n            if(itemName === \"selectAll\"){\n                if(allChecked === true){\n                    console.log(allChecked);\n                    fruits = fruits.map(item => {\n                        selectedValue.push(item);\n                        return {...item, isChecked: true}\n                    }) \n                    console.log(\"data\", selectedValue)\n                }\n\n                else{\n                    fruits = fruits.map(item => {\n                        // const index = selectedValue.indexOf(item.id);\n                        // selectedValplice(index, 1);\n                         selectedValue = [];\n                        // selectedValue.splice(index, 1);\n                        return {...item, isChecked : false}\n                    }) \n                    console.log(selectedValue);\n                }\n            }\n            else{\n                let tempFruits = fruits;\n                tempFruits.forEach(item => {\n                    if (item.value === itemName) {\n                        item.isChecked = isCheckedItems;\n                        console.log(\"Hey\",item.isChecked, fruits)\n                    }\n                });\n            }\n            \n            return {fruits , allChecked}\n        })\n    }\n\n\n    // for(let i = 0; i < fruits.length; i++){\n    //     if(itemName === fruits[i].value){\n    //         fruits[i].isChecked = true;console.log(\"hey\", fruits[i] )\n    //     }\n    //     else{\n    //         fruits[i].isChecked = false;\n    //     }\n    // }\n\n    render() {\n        console.log(\"State\", this.state);\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruit, index) => {\n                    return (\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                                {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}