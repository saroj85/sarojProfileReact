{"ast":null,"code":"var _jsxFileName = \"/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js\";\nimport React, { Component } from 'react';\nlet dataobj = [];\n\nclass checkbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let itemName = event.target.value;\n      let isCheckedItems = event.target.checked;\n      this.setState(prevState => {\n        let fruits = prevState.fruits,\n            allChecked = prevState.allChecked; // allChecked\n\n        if (itemName === \"selectAll\") {\n          if (allChecked === true) {\n            console.log(allChecked);\n          }\n        }\n      });\n    };\n\n    this.state = {\n      fruits: [{\n        id: 1,\n        value: 'apple',\n        isChecked: false\n      }, {\n        id: 2,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 3,\n        value: 'mango',\n        isChecked: false\n      }, {\n        id: 12,\n        value: 'guva',\n        isChecked: false\n      }, {\n        id: 4,\n        value: 'papaya',\n        isChecked: false\n      }, {\n        id: 5,\n        value: 'kiwi',\n        isChecked: false\n      }, {\n        id: 6,\n        value: 'pineapple',\n        isChecked: false\n      }, {\n        id: 7,\n        value: 'strawberry',\n        isChecked: false\n      }, {\n        id: 8,\n        value: 'banana',\n        isChecked: false\n      }, {\n        id: 9,\n        value: 'orange',\n        isChecked: false\n      }, {\n        id: 10,\n        value: 'peach',\n        isChecked: false\n      }, {\n        id: 11,\n        value: 'melon',\n        isChecked: false\n      }],\n      allChecked: false\n    };\n  } // handleAllChecked = (event) => {\n  //     let itemName = event.target.value;\n  //     let isCheckedItem = event.target.checked;\n  //     this.setState(prevState => {\n  //         let { fruits, allChecked } = prevState;\n  //         allChecked = isCheckedItem;\n  //         if (itemName === \"selectAll\") {\n  //             if (allChecked === true) {\n  //                 console.log(allChecked);\n  //                 fruits = fruits.map(itm => ({ ...itm, isChecked: true }))\n  //             }\n  //             else {\n  //                 fruits = fruits.map(itm => ({ ...itm, isChecked: false }))\n  //                 console.log(allChecked)\n  //             }\n  //         }\n  //         return { fruits, allChecked }\n  //     })\n  // }\n\n\n  render() {\n    const fruits = this.state.fruits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"selectAll\",\n      onClick: this.handleAllChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Select All\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n      return React.createElement(\"div\", {\n        key: fruit.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: fruit.value,\n        checked: fruit.isChecked,\n        onChange: this.handleAllChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), fruit.value);\n    }));\n  }\n\n}\n\nexport default checkbox;","map":{"version":3,"sources":["/home/bigstack02/Desktop/SarojReact/my-app/src/component/checkbox.js"],"names":["React","Component","dataobj","checkbox","constructor","props","handleAllChecked","event","itemName","target","value","isCheckedItems","checked","setState","prevState","fruits","allChecked","console","log","state","id","isChecked","render","length","map","fruit","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nlet dataobj = [];\n\nclass checkbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fruits: [\n                { id: 1, value: 'apple', isChecked: false },\n                { id: 2, value: 'banana', isChecked: false },\n                { id: 3, value: 'mango', isChecked: false },\n                { id: 12, value: 'guva', isChecked: false },\n                { id: 4, value: 'papaya', isChecked: false },\n                { id: 5, value: 'kiwi', isChecked: false },\n                { id: 6, value: 'pineapple', isChecked: false },\n                { id: 7, value: 'strawberry', isChecked: false },\n                { id: 8, value: 'banana', isChecked: false },\n                { id: 9, value: 'orange', isChecked: false },\n                { id: 10, value: 'peach', isChecked: false },\n                { id: 11, value: 'melon', isChecked: false }\n            ],\n            allChecked: false,\n        }\n    }\n    // handleAllChecked = (event) => {\n    //     let itemName = event.target.value;\n    //     let isCheckedItem = event.target.checked;\n\n    //     this.setState(prevState => {\n    //         let { fruits, allChecked } = prevState;\n    //         allChecked = isCheckedItem;\n    //         if (itemName === \"selectAll\") {\n    //             if (allChecked === true) {\n    //                 console.log(allChecked);\n    //                 fruits = fruits.map(itm => ({ ...itm, isChecked: true }))\n    //             }\n    //             else {\n    //                 fruits = fruits.map(itm => ({ ...itm, isChecked: false }))\n    //                 console.log(allChecked)\n    //             }\n    //         }\n    //         return { fruits, allChecked }\n    //     })\n    // }\n\n    handleAllChecked = event =>{\n        let itemName = event.target.value;\n        let isCheckedItems = event.target.checked;\n        this.setState((prevState) => {\n            let { fruits, allChecked} = prevState;\n            // allChecked\n            if(itemName === \"selectAll\"){\n                if(allChecked === true){\n                    console.log(allChecked)\n                }\n            }\n\n        })\n    }\n\n\n\n\n    render() {\n        const { fruits } = this.state;\n\n        return (\n            <div>\n                <input type=\"checkbox\" value=\"selectAll\" onClick={this.handleAllChecked} />\n                <label>Select All</label>\n                <hr></hr>\n                {fruits && fruits.length > 0 && fruits.map((fruit, index) => {\n                    return (\n                        <div key={fruit.id} >\n                            <input\n                                type=\"checkbox\"\n                                value={fruit.value}\n                                checked={fruit.isChecked}\n                                onChange={this.handleAllChecked} />\n                            {fruit.value}\n                        </div>\n                    )\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default checkbox;"]},"metadata":{},"sourceType":"module"}