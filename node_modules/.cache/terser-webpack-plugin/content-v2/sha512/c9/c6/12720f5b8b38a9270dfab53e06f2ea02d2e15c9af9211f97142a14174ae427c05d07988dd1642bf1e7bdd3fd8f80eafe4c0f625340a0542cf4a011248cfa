{"map":"{\"version\":3,\"sources\":[\"D:\\\\work\\\\my-app\\\\src\\\\component\\\\user.js\",\"D:\\\\work\\\\my-app\\\\src\\\\component\\\\user\\\\index.js\",\"D:\\\\work\\\\my-app\\\\src\\\\component\\\\pages\\\\welcome.js\",\"D:\\\\work\\\\my-app\\\\src\\\\component\\\\App.js\",\"D:\\\\work\\\\my-app\\\\src\\\\serviceWorker.js\",\"D:\\\\work\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"UserContext\",\"React\",\"createContext\",\"UserProvider\",\"Provider\",\"User\",\"Consumer\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"componentDidMount\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"setState\",\"user\",\"console\",\"log\",\"state\",\"url\",\"react_default\",\"a\",\"createElement\",\"length\",\"map\",\"index\",\"name\",\"Component\",\"welcome\",\"src_component_user\",\"App\",\"value\",\"age\",\"className\",\"pages_welcome\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"component_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"uKAEMA,EAAcC,EAAAA,EAAMC,cAAc,IAE3BC,EAAeH,EAAYI,SCwCzBC,GDtCaL,EAAYM,qBCFpC,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAOVQ,kBAAoB,WAEhBC,MAAK,8CACAC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OACNZ,EAAKa,SAAS,CACVC,KAAMF,GACP,WACCG,QAAQC,IAAIJ,QAdxBZ,EAAKiB,MAAQ,CACTC,IAAK,6CACLJ,KAAM,IAJKd,wEAwBf,OACImB,EAAAC,EAAAC,cAAA,MAAA,KAEQlB,KAAKc,MAAMH,MAAQX,KAAKc,MAAMH,KAAKQ,OAAS,GAAKnB,KAAKc,MAAMH,KAAKS,IAAI,SAACT,EAAMU,GACxE,OACIL,EAAAC,EAAAC,cAAA,MAAA,KACKP,EAAKW,gBA/BnBC,EAAAA,YCWJC,mLATP,OACIR,EAAAC,EAAAC,cAAA,MAAA,KAAA,UAEIF,EAAAC,EAAAC,cAACO,EAAD,cALMF,EAAAA,WCuBPG,IAAAA,EAtBf,WAYE,OACEV,EAAAC,EAAAC,cAAC1B,EAAD,CAAcmC,MAVH,CACX,CAAEL,KAAM,QAASM,IAAK,IACtB,CAAEN,KAAM,UAAWM,IAAK,IACxB,CAAEN,KAAM,OAAQM,IAAK,IACrB,CAAEN,KAAM,QAASM,IAAK,IACtB,CAAEN,KAAM,QAASM,IAAK,IACtB,CAAEN,KAAM,SAAUM,IAAK,MAKrBZ,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAA,KAAA,KAAA,wBACAF,EAAAC,EAAAC,cAACY,EAAD,SCRYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react'\\n\\nconst UserContext = React.createContext({})\\n\\nexport const UserProvider = UserContext.Provider;\\n\\nexport const UserConsumer = UserContext.Consumer;\\n\\nexport default UserContext;\",\"import React, { Component } from 'react';\\nimport { UserConsumer } from '../user';\\n\\nclass User extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            url: 'https://jsonplaceholder.typicode.com/users',\\n            user: [],\\n        }\\n    }\\n\\n    componentDidMount = () => {\\n\\n        fetch(`https://jsonplaceholder.typicode.com/users`)\\n            .then(response => response.json())\\n            .then(data =>\\n                this.setState({\\n                    user: data,\\n                }, () => {\\n                    console.log(data)\\n                })\\n\\n            )\\n\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                {\\n                    this.state.user && this.state.user.length > 0 && this.state.user.map((user, index) => {\\n                        return (\\n                            <div>\\n                                {user.name}\\n                            </div>\\n                        )\\n                    })\\n                }\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default User;\",\"import React, { Component } from 'react';\\nimport User from '../user/index';\\n\\nclass welcome extends Component {\\n    render() {\\n        return (\\n            <div>\\n                welcome\\n                <User/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default welcome;\",\"import React from 'react';\\nimport Welcome from '../component/pages/welcome'\\nimport { UserProvider } from '../component/user';\\n\\nfunction App() {\\n  \\n  const user = { name: 'Tania', loggedIn: true }\\n  const arry = [\\n    { name: \\\"saroj\\\", age: 19 },\\n    { name: \\\"sandeep\\\", age: 24 },\\n    { name: \\\"raju\\\", age: 23 },\\n    { name: \\\"pappu\\\", age: 12 },\\n    { name: \\\"ajeet\\\", age: 23 },\\n    { name: \\\"sachin\\\", age: 12 },\\n  ]\\n\\n  return (\\n    <UserProvider value={arry}>\\n      <div className=\\\"App\\\">\\n        <h1>welcome to react app</h1>\\n        <Welcome />\\n      </div>\\n    </UserProvider>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './component/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport { Router, Route, Link, browserHistory, IndexRoute } from 'react-router';\\n\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n// ReactDOM.render((\\n//     <Router history = {browserHistory}>\\n//        <Route path = \\\"/\\\" component = {App}>\\n//           <IndexRoute component = {Home} />\\n//           <Route path = \\\"home\\\" component = {Home} />\\n//           <Route path = \\\"about\\\" component = {About} />\\n//           <Route path = \\\"contact\\\" component = {Contact} />\\n//        </Route>\\n//     </Router>\\n//  ), document.getElementById('root'))\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(7),c=n.n(o),u=n(1),i=n(2),s=n(4),l=n(3),m=n(5),h=r.a.createContext({}),p=h.Provider,d=(h.Consumer,function(e){function t(e){var n;return Object(u.a)(this,t),(n=Object(s.a)(this,Object(l.a)(t).call(this,e))).componentDidMount=function(){fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(e){return n.setState({user:e},function(){console.log(e)})})},n.state={url:\"https://jsonplaceholder.typicode.com/users\",user:[]},n}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,this.state.user&&this.state.user.length>0&&this.state.user.map(function(e,t){return r.a.createElement(\"div\",null,e.name)}))}}]),t}(a.Component)),f=function(e){function t(){return Object(u.a)(this,t),Object(s.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,\"welcome\",r.a.createElement(d,null))}}]),t}(a.Component);var j=function(){return r.a.createElement(p,{value:[{name:\"saroj\",age:19},{name:\"sandeep\",age:24},{name:\"raju\",age:23},{name:\"pappu\",age:12},{name:\"ajeet\",age:23},{name:\"sachin\",age:12}]},r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"h1\",null,\"welcome to react app\"),r.a.createElement(f,null)))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(14)}},[[8,1,2]]]);","extractedComments":[]}